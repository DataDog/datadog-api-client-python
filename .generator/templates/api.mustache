{{>partial_header}}

import re  # noqa: F401
import sys  # noqa: F401

from {{packageName}}.api_client import ApiClient, Endpoint as _Endpoint
from {{packageName}}.model_utils import (  # noqa: F401
    date,
    datetime,
    file_type,
    none_type,
    validate_and_convert_types
)
{{#imports}}
{{{import}}}
{{/imports}}


{{#operations}}
class {{classname}}(object):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client
{{#operation}}

        self._{{operationId}}_endpoint = _Endpoint(
            settings={
                'response_type': {{#returnType}}({{{returnType}}},){{/returnType}}{{^returnType}}None{{/returnType}},
{{#authMethods}}
{{#-first}}
                'auth': [
{{/-first}}
                    '{{name}}'{{^-last}},{{/-last}}
{{#-last}}
                ],
{{/-last}}
{{/authMethods}}
{{^authMethods}}
                'auth': [],
{{/authMethods}}
                'endpoint_path': '{{{path}}}',
                'operation_id': '{{operationId}}',
                'http_method': '{{httpMethod}}',
{{#servers}}
{{#-first}}
                'servers': [
{{/-first}}
                    {
                        'url': "{{{url}}}",
                        'description': "{{{description}}}{{^description}}No description provided{{/description}}",
                        {{#variables}}
                        {{#-first}}
                        'variables': {
                        {{/-first}}
                            '{{{name}}}': {
                                'description': "{{{description}}}{{^description}}No description provided{{/description}}",
                                'default_value': "{{{defaultValue}}}",
                                {{#enumValues}}
                                {{#-first}}
                                'enum_values': [
                                {{/-first}}
                                    "{{{.}}}"{{^-last}},{{/-last}}
                                {{#-last}}
                                ]
                                {{/-last}}
                                {{/enumValues}}
                                }{{^-last}},{{/-last}}
                        {{#-last}}
                            }
                        {{/-last}}
                        {{/variables}}
                    },
{{#-last}}
                ]
{{/-last}}
{{/servers}}
{{^servers}}
                'servers': None,
{{/servers}}
            },
            params_map={
{{#allParams}}
                '{{paramName}}': {
                     {{#required}}'required': True,{{/required}}
		     {{#isNullable}}'nullable': True,{{/isNullable}}
{{#isEnum}}
                     'allowed_values': {
{{#isNullable}}
                        'None': None,{{/isNullable}}{{#allowableValues}}{{#enumVars}}
                        "{{name}}": {{{value}}}{{^-last}},{{/-last}}{{/enumVars}}{{/allowableValues}}
                    },
{{/isEnum}}
{{#hasValidation}}
                     'validation': {
{{#maxLength}}
                        'max_length': {{.}},{{/maxLength}}{{#minLength}}
                        'min_length': {{.}},{{/minLength}}{{#maxItems}}
                        'max_items': {{.}},{{/maxItems}}{{#minItems}}
                        'min_items': {{.}},{{/minItems}}{{#maximum}}
                        {{#exclusiveMaximum}}'exclusive_maximum'{{/exclusiveMaximum}}{{^exclusiveMaximum}}'inclusive_maximum'{{/exclusiveMaximum}}: {{maximum}},{{/maximum}}{{#minimum}}
                        {{#exclusiveMinimum}}'exclusive_minimum'{{/exclusiveMinimum}}{{^exclusiveMinimum}}'inclusive_minimum'{{/exclusiveMinimum}}: {{minimum}},{{/minimum}}{{#pattern}}
                        'regex': {
                            'pattern': r'{{{vendorExtensions.x-regex}}}',  # noqa: E501{{#vendorExtensions.x-modifiers}}
                            {{#-first}}'flags': (re.{{.}}{{/-first}}{{^-first}}          re.{{.}}{{/-first}}{{^-last}} | {{/-last}}{{#-last}}){{/-last}}{{/vendorExtensions.x-modifiers}}
                        },{{/pattern}}
                    },
{{/hasValidation}}
                    'openapi_types': ({{{dataType}}},),
		   {{^isBodyParam}}
                    'attribute': '{{baseName}}',
{{/isBodyParam}}
                    'location': '{{#isFormParam}}form{{/isFormParam}}{{#isQueryParam}}query{{/isQueryParam}}{{#isPathParam}}path{{/isPathParam}}{{#isHeaderParam}}header{{/isHeaderParam}}{{#isCookieParam}}cookie{{/isCookieParam}}{{#isBodyParam}}body{{/isBodyParam}}',
{{#collectionFormat}}
                    'collection_format': '{{collectionFormat}}',
{{/collectionFormat}}
	    },
{{/allParams}}
},
            headers_map={
{{#hasProduces}}
                'accept': [
{{#produces}}
                    '{{{mediaType}}}'{{^-last}},{{/-last}}
{{/produces}}
                ],
{{/hasProduces}}
{{^hasProduces}}
                'accept': [],
{{/hasProduces}}
{{#hasConsumes}}
                'content_type': [
{{#consumes}}
                    '{{{mediaType}}}'{{^-last}},{{/-last}}
{{/consumes}}
                ]
{{/hasConsumes}}
{{^hasConsumes}}
                'content_type': [],
{{/hasConsumes}}
            },
            api_client=api_client
        )
{{/operation}}

{{#operation}}
    def {{operationId}}(
        self,
{{#requiredParams}}
{{^defaultValue}}
        {{paramName}},
{{/defaultValue}}
{{/requiredParams}}
{{#requiredParams}}
{{#defaultValue}}
        {{paramName}}={{{defaultValue}}},
{{/defaultValue}}
{{/requiredParams}}
        **kwargs
    ):
        """{{#summary}}{{{.}}}{{/summary}}{{^summary}}{{operationId}}{{/summary}}  # noqa: E501

{{#notes}}
        {{{notes}}}  # noqa: E501
{{/notes}}
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.{{operationId}}({{#requiredParams}}{{^defaultValue}}{{paramName}}, {{/defaultValue}}{{/requiredParams}}{{#requiredParams}}{{#defaultValue}}{{paramName}}={{{defaultValue}}}, {{/defaultValue}}{{/requiredParams}}async_req=True)
        >>> result = thread.get()

{{#requiredParams}}
{{#-last}}
        Args:
{{/-last}}
{{/requiredParams}}
{{#requiredParams}}
{{^defaultValue}}
            {{paramName}} ({{dataType}}):{{#description}} {{{description}}}{{/description}}
{{/defaultValue}}
{{/requiredParams}}
{{#requiredParams}}
{{#defaultValue}}
            {{paramName}} ({{dataType}}):{{#description}} {{{description}}}.{{/description}} defaults to {{{defaultValue}}}, must be one of [{{{defaultValue}}}]
{{/defaultValue}}
{{/requiredParams}}

        Keyword Args:{{#optionalParams}}
            {{paramName}} ({{dataType}}):{{#description}} {{{description}}}.{{/description}} [optional]{{#defaultValue}} if omitted the server will use the default value of {{{defaultValue}}}{{/defaultValue}}{{/optionalParams}}
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (float/tuple): timeout setting for this request. If one
                number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            {{#returnType}}{{returnType}}{{/returnType}}{{^returnType}}None{{/returnType}}
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs = self._{{operationId}}_endpoint.default_arguments(kwargs)
{{#requiredParams}}
        kwargs['{{paramName}}'] = \
            {{paramName}}
{{/requiredParams}}
        return self._{{operationId}}_endpoint.call_with_http_info(**kwargs)
{{/operation}}
{{/operations}}
