# Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
# This product includes software developed at Datadog (https://www.datadoghq.com/).
# Copyright 2019-Present Datadog, Inc.


from datadog_api_client.v2.model_utils import (
    ModelNormal,
    cached_property,
    datetime,
)


def lazy_import():
    from datadog_api_client.v2.model.creator import Creator
    from datadog_api_client.v2.model.dashboard_type import DashboardType

    globals()["Creator"] = Creator
    globals()["DashboardType"] = DashboardType


class DashboardListItem(ModelNormal):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    validations = {
        "popularity": {
            "inclusive_maximum": 5,
        },
    }

    @cached_property
    def openapi_types():
        lazy_import()
        return {
            "author": (Creator,),
            "created": (datetime,),
            "icon": (str,),
            "id": (str,),
            "is_favorite": (bool,),
            "is_read_only": (bool,),
            "is_shared": (bool,),
            "modified": (datetime,),
            "popularity": (int,),
            "title": (str,),
            "type": (DashboardType,),
            "url": (str,),
        }

    attribute_map = {
        "id": "id",
        "type": "type",
        "author": "author",
        "created": "created",
        "icon": "icon",
        "is_favorite": "is_favorite",
        "is_read_only": "is_read_only",
        "is_shared": "is_shared",
        "modified": "modified",
        "popularity": "popularity",
        "title": "title",
        "url": "url",
    }

    read_only_vars = {
        "created",
        "icon",
        "is_favorite",
        "is_read_only",
        "is_shared",
        "modified",
        "popularity",
        "title",
        "url",
    }

    def __init__(self, id, type, *args, **kwargs):
        """DashboardListItem - a model defined in OpenAPI

        Args:
            id (str): ID of the dashboard.
            type (DashboardType):

        Keyword Args:
            author (Creator): [optional]
            created (datetime): [optional] Date of creation of the dashboard.
            icon (str): [optional] URL to the icon of the dashboard.
            is_favorite (bool): [optional] Whether or not the dashboard is in the favorites.
            is_read_only (bool): [optional] Whether or not the dashboard is read only.
            is_shared (bool): [optional] Whether the dashboard is publicly shared or not.
            modified (datetime): [optional] Date of last edition of the dashboard.
            popularity (int): [optional] Popularity of the dashboard.
            title (str): [optional] Title of the dashboard.
            url (str): [optional] URL path to the dashboard.
        """
        super().__init__(kwargs)

        self._check_pos_args(args)

        self.id = id
        self.type = type

    @classmethod
    def _from_openapi_data(cls, id, type, *args, **kwargs):
        """Helper creating a new instance from a response."""

        self = super(DashboardListItem, cls)._from_openapi_data(kwargs)

        self._check_pos_args(args)

        self.id = id
        self.type = type
        return self
