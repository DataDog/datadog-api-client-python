# Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
# This product includes software developed at Datadog (https://www.datadoghq.com/).
# Copyright 2019-Present Datadog, Inc.
from __future__ import annotations

from typing import List, Union, TYPE_CHECKING

from datadog_api_client.model_utils import (
    ModelNormal,
    cached_property,
    unset,
    UnsetType,
)


if TYPE_CHECKING:
    from datadog_api_client.v2.model.epss import EPSS


class VulnerabilityRisks(ModelNormal):
    @cached_property
    def openapi_types(_):
        from datadog_api_client.v2.model.epss import EPSS

        return {
            "epss": (EPSS,),
            "exploit_available": (bool,),
            "exploit_sources": ([str],),
            "exploitation_probability": (bool,),
            "poc_exploit_available": (bool,),
        }

    attribute_map = {
        "epss": "epss",
        "exploit_available": "exploit_available",
        "exploit_sources": "exploit_sources",
        "exploitation_probability": "exploitation_probability",
        "poc_exploit_available": "poc_exploit_available",
    }

    def __init__(
        self_,
        exploit_available: bool,
        exploit_sources: List[str],
        exploitation_probability: bool,
        poc_exploit_available: bool,
        epss: Union[EPSS, UnsetType] = unset,
        **kwargs,
    ):
        """
        Vulnerability risks.

        :param epss: Vulnerability EPSS severity.
        :type epss: EPSS, optional

        :param exploit_available: Vulnerability public exploit availability.
        :type exploit_available: bool

        :param exploit_sources: Vulnerability exploit sources.
        :type exploit_sources: [str]

        :param exploitation_probability: Vulnerability exploitation probability.
        :type exploitation_probability: bool

        :param poc_exploit_available: Vulnerability POC exploit availability.
        :type poc_exploit_available: bool
        """
        if epss is not unset:
            kwargs["epss"] = epss
        super().__init__(kwargs)

        self_.exploit_available = exploit_available
        self_.exploit_sources = exploit_sources
        self_.exploitation_probability = exploitation_probability
        self_.poc_exploit_available = poc_exploit_available
