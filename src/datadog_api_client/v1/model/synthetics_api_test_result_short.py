# Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
# This product includes software developed at Datadog (https://www.datadoghq.com/).
# Copyright 2019-Present Datadog, Inc.


from datadog_api_client.v1.model_utils import (
    ModelNormal,
    cached_property,
)


def lazy_import():
    from datadog_api_client.v1.model.synthetics_api_test_result_short_result import SyntheticsAPITestResultShortResult
    from datadog_api_client.v1.model.synthetics_test_monitor_status import SyntheticsTestMonitorStatus

    globals()["SyntheticsAPITestResultShortResult"] = SyntheticsAPITestResultShortResult
    globals()["SyntheticsTestMonitorStatus"] = SyntheticsTestMonitorStatus


class SyntheticsAPITestResultShort(ModelNormal):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    validations = {}

    @cached_property
    def openapi_types():
        lazy_import()
        return {
            "check_time": (float,),
            "probe_dc": (str,),
            "result": (SyntheticsAPITestResultShortResult,),
            "result_id": (str,),
            "status": (SyntheticsTestMonitorStatus,),
        }

    attribute_map = {
        "check_time": "check_time",
        "probe_dc": "probe_dc",
        "result": "result",
        "result_id": "result_id",
        "status": "status",
    }

    read_only_vars = {}

    def __init__(self, *args, **kwargs):
        """SyntheticsAPITestResultShort - a model defined in OpenAPI

        Keyword Args:
            check_time (float): [optional] Last time the API test was performed.
            probe_dc (str): [optional] Location from which the API test was performed.
            result (SyntheticsAPITestResultShortResult): [optional]
            result_id (str): [optional] ID of the API test result.
            status (SyntheticsTestMonitorStatus): [optional]
        """
        super().__init__(kwargs)

        self._check_pos_args(args)

    @classmethod
    def _from_openapi_data(cls, *args, **kwargs):
        """Helper creating a new instance from a response."""

        self = super(SyntheticsAPITestResultShort, cls)._from_openapi_data(kwargs)

        self._check_pos_args(args)

        return self
