# Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
# This product includes software developed at Datadog (https://www.datadoghq.com/).
# Copyright 2019-Present Datadog, Inc.


from datadog_api_client.v1.model_utils import (
    ModelNormal,
    cached_property,
    none_type,
)


def lazy_import():
    from datadog_api_client.v1.model.service_level_objective_query import ServiceLevelObjectiveQuery
    from datadog_api_client.v1.model.slo_threshold import SLOThreshold
    from datadog_api_client.v1.model.slo_type import SLOType

    globals()["SLOThreshold"] = SLOThreshold
    globals()["SLOType"] = SLOType
    globals()["ServiceLevelObjectiveQuery"] = ServiceLevelObjectiveQuery


class ServiceLevelObjectiveRequest(ModelNormal):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    validations = {}

    @cached_property
    def openapi_types():
        lazy_import()
        return {
            "description": (
                str,
                none_type,
            ),
            "groups": ([str],),
            "monitor_ids": ([int],),
            "name": (str,),
            "query": (ServiceLevelObjectiveQuery,),
            "tags": ([str],),
            "thresholds": ([SLOThreshold],),
            "type": (SLOType,),
        }

    attribute_map = {
        "name": "name",
        "thresholds": "thresholds",
        "type": "type",
        "description": "description",
        "groups": "groups",
        "monitor_ids": "monitor_ids",
        "query": "query",
        "tags": "tags",
    }

    read_only_vars = {}

    def __init__(self, name, thresholds, type, *args, **kwargs):
        """ServiceLevelObjectiveRequest - a model defined in OpenAPI


        :param name: The name of the service level objective object.
        :type name: str

        :param thresholds: The thresholds (timeframes and associated targets) for this service level objective object.
        :type thresholds: [SLOThreshold]

        :type type: SLOType

        :param description: A user-defined description of the service level objective.  Always included in service level objective responses (but may be `null`). Optional in create/update requests.
        :type description: str, none_type, optional

        :param groups: A list of (up to 20) monitor groups that narrow the scope of a monitor service level objective.  Included in service level objective responses if it is not empty. Optional in create/update requests for monitor service level objectives, but may only be used when then length of the `monitor_ids` field is one.
        :type groups: [str], optional

        :param monitor_ids: A list of monitor ids that defines the scope of a monitor service level objective. **Required if type is `monitor`**.
        :type monitor_ids: [int], optional

        :type query: ServiceLevelObjectiveQuery, optional

        :param tags: A list of tags associated with this service level objective. Always included in service level objective responses (but may be empty). Optional in create/update requests.
        :type tags: [str], optional
        """
        super().__init__(kwargs)

        self._check_pos_args(args)

        self.name = name
        self.thresholds = thresholds
        self.type = type

    @classmethod
    def _from_openapi_data(cls, name, thresholds, type, *args, **kwargs):
        """Helper creating a new instance from a response."""

        self = super(ServiceLevelObjectiveRequest, cls)._from_openapi_data(kwargs)

        self._check_pos_args(args)

        self.name = name
        self.thresholds = thresholds
        self.type = type
        return self
