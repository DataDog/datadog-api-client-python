# Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
# This product includes software developed at Datadog (https://www.datadoghq.com/).
# Copyright 2019-Present Datadog, Inc.


from datadog_api_client.v1.model_utils import (
    ModelNormal,
    cached_property,
)


def lazy_import():
    from datadog_api_client.v1.model.host_meta import HostMeta
    from datadog_api_client.v1.model.host_metrics import HostMetrics

    globals()["HostMeta"] = HostMeta
    globals()["HostMetrics"] = HostMetrics


class Host(ModelNormal):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    validations = {}

    @cached_property
    def openapi_types():
        lazy_import()
        return {
            "aliases": ([str],),
            "apps": ([str],),
            "aws_name": (str,),
            "host_name": (str,),
            "id": (int,),
            "is_muted": (bool,),
            "last_reported_time": (int,),
            "meta": (HostMeta,),
            "metrics": (HostMetrics,),
            "mute_timeout": (int,),
            "name": (str,),
            "sources": ([str],),
            "tags_by_source": ({str: ([str],)},),
            "up": (bool,),
        }

    attribute_map = {
        "aliases": "aliases",
        "apps": "apps",
        "aws_name": "aws_name",
        "host_name": "host_name",
        "id": "id",
        "is_muted": "is_muted",
        "last_reported_time": "last_reported_time",
        "meta": "meta",
        "metrics": "metrics",
        "mute_timeout": "mute_timeout",
        "name": "name",
        "sources": "sources",
        "tags_by_source": "tags_by_source",
        "up": "up",
    }

    read_only_vars = {}

    def __init__(self, *args, **kwargs):
        """Host - a model defined in OpenAPI

        Keyword Args:
            aliases ([str]): [optional] Host aliases collected by Datadog.
            apps ([str]): [optional] The Datadog integrations reporting metrics for the host.
            aws_name (str): [optional] AWS name of your host.
            host_name (str): [optional] The host name.
            id (int): [optional] The host ID.
            is_muted (bool): [optional] If a host is muted or unmuted.
            last_reported_time (int): [optional] Last time the host reported a metric data point.
            meta (HostMeta): [optional]
            metrics (HostMetrics): [optional]
            mute_timeout (int): [optional] Timeout of the mute applied to your host.
            name (str): [optional] The host name.
            sources ([str]): [optional] Source or cloud provider associated with your host.
            tags_by_source ({str: ([str],)}): [optional] List of tags for each source (AWS, Datadog Agent, Chef..).
            up (bool): [optional] Displays UP when the expected metrics are received and displays `???` if no metrics are received.
        """
        super().__init__(kwargs)

        self._check_pos_args(args)

    @classmethod
    def _from_openapi_data(cls, *args, **kwargs):
        """Helper creating a new instance from a response."""

        self = super(Host, cls)._from_openapi_data(kwargs)

        self._check_pos_args(args)

        return self
