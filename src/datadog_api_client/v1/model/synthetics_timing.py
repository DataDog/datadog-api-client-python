# Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
# This product includes software developed at Datadog (https://www.datadoghq.com/).
# Copyright 2019-Present Datadog, Inc.


from datadog_api_client.v1.model_utils import (
    ModelNormal,
    cached_property,
)


class SyntheticsTiming(ModelNormal):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    validations = {}

    @cached_property
    def openapi_types():
        return {
            "dns": (float,),
            "download": (float,),
            "first_byte": (float,),
            "handshake": (float,),
            "redirect": (float,),
            "ssl": (float,),
            "tcp": (float,),
            "total": (float,),
            "wait": (float,),
        }

    attribute_map = {
        "dns": "dns",
        "download": "download",
        "first_byte": "firstByte",
        "handshake": "handshake",
        "redirect": "redirect",
        "ssl": "ssl",
        "tcp": "tcp",
        "total": "total",
        "wait": "wait",
    }

    read_only_vars = {}

    def __init__(self, *args, **kwargs):
        """SyntheticsTiming - a model defined in OpenAPI

        Keyword Args:
            dns (float): [optional] The duration in millisecond of the DNS lookup.
            download (float): [optional] The time in millisecond to download the response.
            first_byte (float): [optional] The time in millisecond to first byte.
            handshake (float): [optional] The duration in millisecond of the TLS handshake.
            redirect (float): [optional] The time in millisecond spent during redirections.
            ssl (float): [optional] The duration in millisecond of the TLS handshake.
            tcp (float): [optional] Time in millisecond to establish the TCP connection.
            total (float): [optional] The overall time in millisecond the request took to be processed.
            wait (float): [optional] Time spent in millisecond waiting for a response.
        """
        super().__init__(kwargs)

        self._check_pos_args(args)

    @classmethod
    def _from_openapi_data(cls, *args, **kwargs):
        """Helper creating a new instance from a response."""

        self = super(SyntheticsTiming, cls)._from_openapi_data(kwargs)

        self._check_pos_args(args)

        return self
