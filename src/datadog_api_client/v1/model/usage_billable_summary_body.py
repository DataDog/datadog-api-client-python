# Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
# This product includes software developed at Datadog (https://www.datadoghq.com/).
# Copyright 2019-Present Datadog, Inc.


from datadog_api_client.v1.model_utils import (
    ModelNormal,
    cached_property,
    datetime,
)


class UsageBillableSummaryBody(ModelNormal):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    validations = {}

    @cached_property
    def openapi_types():
        return {
            "account_billable_usage": (int,),
            "elapsed_usage_hours": (int,),
            "first_billable_usage_hour": (datetime,),
            "last_billable_usage_hour": (datetime,),
            "org_billable_usage": (int,),
            "percentage_in_account": (float,),
            "usage_unit": (str,),
        }

    attribute_map = {
        "account_billable_usage": "account_billable_usage",
        "elapsed_usage_hours": "elapsed_usage_hours",
        "first_billable_usage_hour": "first_billable_usage_hour",
        "last_billable_usage_hour": "last_billable_usage_hour",
        "org_billable_usage": "org_billable_usage",
        "percentage_in_account": "percentage_in_account",
        "usage_unit": "usage_unit",
    }

    read_only_vars = {}

    def __init__(self, *args, **kwargs):
        """UsageBillableSummaryBody - a model defined in OpenAPI

        Keyword Args:
            account_billable_usage (int): [optional] The total account usage.
            elapsed_usage_hours (int): [optional] Elapsed usage hours for some billable product.
            first_billable_usage_hour (datetime): [optional] The first billable hour for the org.
            last_billable_usage_hour (datetime): [optional] The last billable hour for the org.
            org_billable_usage (int): [optional] The number of units used within the billable timeframe.
            percentage_in_account (float): [optional] The percentage of account usage the org represents.
            usage_unit (str): [optional] Units pertaining to the usage.
        """
        super().__init__(kwargs)

        self._check_pos_args(args)

    @classmethod
    def _from_openapi_data(cls, *args, **kwargs):
        """Helper creating a new instance from a response."""

        self = super(UsageBillableSummaryBody, cls)._from_openapi_data(kwargs)

        self._check_pos_args(args)

        return self
