# Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
# This product includes software developed at Datadog (https://www.datadoghq.com/).
# Copyright 2019-Present Datadog, Inc.


from datadog_api_client.v1.model_utils import (
    ModelNormal,
    cached_property,
)


def lazy_import():
    from datadog_api_client.v1.model.synthetics_private_location_secrets import SyntheticsPrivateLocationSecrets

    globals()["SyntheticsPrivateLocationSecrets"] = SyntheticsPrivateLocationSecrets


class SyntheticsPrivateLocation(ModelNormal):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    validations = {}

    @cached_property
    def openapi_types():
        lazy_import()
        return {
            "description": (str,),
            "id": (str,),
            "name": (str,),
            "secrets": (SyntheticsPrivateLocationSecrets,),
            "tags": ([str],),
        }

    attribute_map = {
        "description": "description",
        "name": "name",
        "tags": "tags",
        "id": "id",
        "secrets": "secrets",
    }

    read_only_vars = {
        "id",
    }

    def __init__(self, description, name, tags, *args, **kwargs):
        """SyntheticsPrivateLocation - a model defined in OpenAPI


        :param description: Description of the private location.
        :type description: str

        :param name: Name of the private location.
        :type name: str

        :param tags: Array of tags attached to the private location.
        :type tags: [str]

        :param id: Unique identifier of the private location.
        :type id: str, optional

        :type secrets: SyntheticsPrivateLocationSecrets, optional
        """
        super().__init__(kwargs)

        self._check_pos_args(args)

        self.description = description
        self.name = name
        self.tags = tags

    @classmethod
    def _from_openapi_data(cls, description, name, tags, *args, **kwargs):
        """Helper creating a new instance from a response."""

        self = super(SyntheticsPrivateLocation, cls)._from_openapi_data(kwargs)

        self._check_pos_args(args)

        self.description = description
        self.name = name
        self.tags = tags
        return self
