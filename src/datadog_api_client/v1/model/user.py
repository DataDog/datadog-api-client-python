# Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
# This product includes software developed at Datadog (https://www.datadoghq.com/).
# Copyright 2019-Present Datadog, Inc.


from datadog_api_client.v1.model_utils import (
    ModelNormal,
    cached_property,
)


def lazy_import():
    from datadog_api_client.v1.model.access_role import AccessRole

    globals()["AccessRole"] = AccessRole


class User(ModelNormal):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    validations = {}

    @cached_property
    def openapi_types():
        lazy_import()
        return {
            "access_role": (AccessRole,),
            "disabled": (bool,),
            "email": (str,),
            "handle": (str,),
            "icon": (str,),
            "name": (str,),
            "verified": (bool,),
        }

    attribute_map = {
        "access_role": "access_role",
        "disabled": "disabled",
        "email": "email",
        "handle": "handle",
        "icon": "icon",
        "name": "name",
        "verified": "verified",
    }

    read_only_vars = {
        "icon",
        "verified",
    }

    def __init__(self, *args, **kwargs):
        """User - a model defined in OpenAPI

        Keyword Args:
            access_role (AccessRole): [optional]
            disabled (bool): [optional] The new disabled status of the user.
            email (str): [optional] The new email of the user.
            handle (str): [optional] The user handle, must be a valid email.
            icon (str): [optional] Gravatar icon associated to the user.
            name (str): [optional] The name of the user.
            verified (bool): [optional] Whether or not the user logged in Datadog at least once.
        """
        super().__init__(kwargs)

        self._check_pos_args(args)

    @classmethod
    def _from_openapi_data(cls, *args, **kwargs):
        """Helper creating a new instance from a response."""

        self = super(User, cls)._from_openapi_data(kwargs)

        self._check_pos_args(args)

        return self
