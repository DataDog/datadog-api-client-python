name: Run Tests

on:
  pull_request:
    branches:
      - master

concurrency:
  group: unit-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    if: false == startsWith(github.event.pull_request.head.ref, 'datadog-api-spec/generated/') && !contains(github.event.pull_request.labels.*.name, 'ci/skip/pre-commit')
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v1
      - name: Install pre-commit
        run: python -m pip install pre-commit
      - name: set PY
        run: echo "PY=$(python -c 'import hashlib, sys;print(hashlib.sha256(sys.version.encode()+sys.executable.encode()).hexdigest())')" >> $GITHUB_ENV
      - uses: actions/cache@v1
        with:
          path: ~/.cache/pre-commit
          key: pre-commit|${{ env.PY }}|${{ hashFiles('.pre-commit-config.yaml') }}
      - name: Run pre-commit
        run: pre-commit run --from-ref ${{ github.event.pull_request.base.sha }} --to-ref ${{ github.event.pull_request.head.sha }} --show-diff-on-failure --color=always

  test:
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]
        platform: [ubuntu-latest, macos-latest] # windows-latest
        # test only latest version on macos and windows
        exclude:
          - platform: macos-latest
            python-version: 3.6
          - platform: macos-latest
            python-version: 3.7
          # TODO enable once dd-trace-py is updated
          # - platform: windows-latest
          #  python-version: 3.6
          # - platform: windows-latest
          #   python-version: 3.7
    runs-on: ${{ matrix.platform }}
    if: github.event.pull_request.draft == false && !contains(github.event.pull_request.labels.*.name, 'ci/skip') && !contains(github.event.pull_request.head.ref, 'datadog-api-spec/test/')
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Upgrade pip
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade wheel setuptools build
      - name: Install
        run: pip install --disable-pip-version-check -e .[tests]
      - name: Test
        run: ./run-tests.sh
        shell: bash

  report:
    runs-on: ubuntu-latest
    if: always() && github.event_name == 'pull_request' && contains(github.event.pull_request.head.ref, 'datadog-api-spec/generated/')
    needs: test
    steps:
      - name: Get GitHub App token
        if: github.event_name == 'pull_request'
        id: get_token
        uses: tibdex/github-app-token@v1.3.0
        with:
          app_id: ${{ secrets.PIPELINE_GITHUB_APP_ID }}
          private_key: ${{ secrets.PIPELINE_GITHUB_APP_PRIVATE_KEY }}
          repository: DataDog/datadog-api-spec
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Post status check
        uses: DataDog/github-actions/post-status-check@v1.0.0
        with:
          github-token: ${{ steps.get_token.outputs.token }}
          repo: datadog-api-spec
          status: ${{ needs.test.result }}
          context: unit
